//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Input/PlatformFighterControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace PlatformFighter.Input
{
    public partial class @PlatformFighterControls : IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @PlatformFighterControls()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlatformFighterControls"",
    ""maps"": [
        {
            ""name"": ""Fighting"",
            ""id"": ""8896f200-110d-4c8b-aa4a-6d5c63808f63"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""a563eaad-f46a-41fa-b5b5-d2d0812a95e6"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""30fc0fe5-8645-4395-87c5-88d708dcac84"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Ability1"",
                    ""type"": ""Button"",
                    ""id"": ""ec8e439d-bc32-40e2-a279-3b770a46ed4d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Ability2"",
                    ""type"": ""Button"",
                    ""id"": ""f0d8ccf3-7c53-4f76-b6e7-eb7fdd923d7c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Ability3"",
                    ""type"": ""Button"",
                    ""id"": ""bcaedfe6-1570-4144-9c45-73690ab41510"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MovementHorizontal"",
                    ""type"": ""Value"",
                    ""id"": ""2d21e9bb-313f-461b-816d-9e55f0f8c783"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""971ab230-e8ff-4efc-a713-69733e4df5d5"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""42ee7ea4-7ea0-447d-92e4-da0c96d789fc"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""dad25772-1e08-486c-94ea-31db99ca11f2"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""5590b9ee-aeb3-4920-a0e3-2fa5eb33c546"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""ee8c6465-0308-4c5b-b677-2beb8a46ac80"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""ArrowKeys"",
                    ""id"": ""360189c6-0d31-4251-acf4-85d5c3a5e64e"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""65888148-1591-406a-b8a4-557eb8f59f78"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""09a6bc06-78e3-47a5-90a4-104679dcc7eb"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""c99384a1-ad2d-4802-993e-400c3e0f2a8c"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""fb473e65-5e1b-42ac-b517-988224a50d8a"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""137516d1-c6bb-478e-b6de-4630ef58908a"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""51a5a88a-5411-46e7-9c42-0436dcabb44e"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ability1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e8584add-7438-495d-bff7-dff0bed928f8"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ability1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7f32c380-726e-4196-9504-967dd71618a5"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ability2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eba201e3-2247-454d-9f83-f37c0c7731d1"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ability3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""AD"",
                    ""id"": ""0cb01464-0432-4897-a665-ed80e7fb07ff"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementHorizontal"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""b3b00c98-5bb9-441d-bcb1-aae56623bae3"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementHorizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""23882b29-d563-4e4f-872a-650cbda752a7"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementHorizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""ArrowKeys"",
                    ""id"": ""22ee0843-0b57-43e1-9f19-a538c55c27b9"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementHorizontal"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""38b0014a-0f07-4870-b602-bc6bbc1640e4"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementHorizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""95d61d13-2f16-43aa-b144-83538bf6e03a"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementHorizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
            // Fighting
            m_Fighting = asset.FindActionMap("Fighting", throwIfNotFound: true);
            m_Fighting_Movement = m_Fighting.FindAction("Movement", throwIfNotFound: true);
            m_Fighting_Dash = m_Fighting.FindAction("Dash", throwIfNotFound: true);
            m_Fighting_Ability1 = m_Fighting.FindAction("Ability1", throwIfNotFound: true);
            m_Fighting_Ability2 = m_Fighting.FindAction("Ability2", throwIfNotFound: true);
            m_Fighting_Ability3 = m_Fighting.FindAction("Ability3", throwIfNotFound: true);
            m_Fighting_MovementHorizontal = m_Fighting.FindAction("MovementHorizontal", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }
        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }
        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // Fighting
        private readonly InputActionMap m_Fighting;
        private IFightingActions m_FightingActionsCallbackInterface;
        private readonly InputAction m_Fighting_Movement;
        private readonly InputAction m_Fighting_Dash;
        private readonly InputAction m_Fighting_Ability1;
        private readonly InputAction m_Fighting_Ability2;
        private readonly InputAction m_Fighting_Ability3;
        private readonly InputAction m_Fighting_MovementHorizontal;
        public struct FightingActions
        {
            private @PlatformFighterControls m_Wrapper;
            public FightingActions(@PlatformFighterControls wrapper) { m_Wrapper = wrapper; }
            public InputAction @Movement => m_Wrapper.m_Fighting_Movement;
            public InputAction @Dash => m_Wrapper.m_Fighting_Dash;
            public InputAction @Ability1 => m_Wrapper.m_Fighting_Ability1;
            public InputAction @Ability2 => m_Wrapper.m_Fighting_Ability2;
            public InputAction @Ability3 => m_Wrapper.m_Fighting_Ability3;
            public InputAction @MovementHorizontal => m_Wrapper.m_Fighting_MovementHorizontal;
            public InputActionMap Get() { return m_Wrapper.m_Fighting; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(FightingActions set) { return set.Get(); }
            public void SetCallbacks(IFightingActions instance)
            {
                if (m_Wrapper.m_FightingActionsCallbackInterface != null)
                {
                    @Movement.started -= m_Wrapper.m_FightingActionsCallbackInterface.OnMovement;
                    @Movement.performed -= m_Wrapper.m_FightingActionsCallbackInterface.OnMovement;
                    @Movement.canceled -= m_Wrapper.m_FightingActionsCallbackInterface.OnMovement;
                    @Dash.started -= m_Wrapper.m_FightingActionsCallbackInterface.OnDash;
                    @Dash.performed -= m_Wrapper.m_FightingActionsCallbackInterface.OnDash;
                    @Dash.canceled -= m_Wrapper.m_FightingActionsCallbackInterface.OnDash;
                    @Ability1.started -= m_Wrapper.m_FightingActionsCallbackInterface.OnAbility1;
                    @Ability1.performed -= m_Wrapper.m_FightingActionsCallbackInterface.OnAbility1;
                    @Ability1.canceled -= m_Wrapper.m_FightingActionsCallbackInterface.OnAbility1;
                    @Ability2.started -= m_Wrapper.m_FightingActionsCallbackInterface.OnAbility2;
                    @Ability2.performed -= m_Wrapper.m_FightingActionsCallbackInterface.OnAbility2;
                    @Ability2.canceled -= m_Wrapper.m_FightingActionsCallbackInterface.OnAbility2;
                    @Ability3.started -= m_Wrapper.m_FightingActionsCallbackInterface.OnAbility3;
                    @Ability3.performed -= m_Wrapper.m_FightingActionsCallbackInterface.OnAbility3;
                    @Ability3.canceled -= m_Wrapper.m_FightingActionsCallbackInterface.OnAbility3;
                    @MovementHorizontal.started -= m_Wrapper.m_FightingActionsCallbackInterface.OnMovementHorizontal;
                    @MovementHorizontal.performed -= m_Wrapper.m_FightingActionsCallbackInterface.OnMovementHorizontal;
                    @MovementHorizontal.canceled -= m_Wrapper.m_FightingActionsCallbackInterface.OnMovementHorizontal;
                }
                m_Wrapper.m_FightingActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @Movement.started += instance.OnMovement;
                    @Movement.performed += instance.OnMovement;
                    @Movement.canceled += instance.OnMovement;
                    @Dash.started += instance.OnDash;
                    @Dash.performed += instance.OnDash;
                    @Dash.canceled += instance.OnDash;
                    @Ability1.started += instance.OnAbility1;
                    @Ability1.performed += instance.OnAbility1;
                    @Ability1.canceled += instance.OnAbility1;
                    @Ability2.started += instance.OnAbility2;
                    @Ability2.performed += instance.OnAbility2;
                    @Ability2.canceled += instance.OnAbility2;
                    @Ability3.started += instance.OnAbility3;
                    @Ability3.performed += instance.OnAbility3;
                    @Ability3.canceled += instance.OnAbility3;
                    @MovementHorizontal.started += instance.OnMovementHorizontal;
                    @MovementHorizontal.performed += instance.OnMovementHorizontal;
                    @MovementHorizontal.canceled += instance.OnMovementHorizontal;
                }
            }
        }
        public FightingActions @Fighting => new FightingActions(this);
        public interface IFightingActions
        {
            void OnMovement(InputAction.CallbackContext context);
            void OnDash(InputAction.CallbackContext context);
            void OnAbility1(InputAction.CallbackContext context);
            void OnAbility2(InputAction.CallbackContext context);
            void OnAbility3(InputAction.CallbackContext context);
            void OnMovementHorizontal(InputAction.CallbackContext context);
        }
    }
}
